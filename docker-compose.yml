version: '3.7'

networks:
  backend:

services:
  web:
    build: .
    command: gunicorn bookstore_project.wsgi -b 0.0.0.0:8000 --timeout 1000
    environment:
      - DJANGO_SETTINGS_MODULE=bookstore_project.settings
      - ENVIRONMENT=${ENVIRONMENT}
      - SECRET_KEY=${SECRET_KEY}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDISCLOUD_URL=${REDISCLOUD_URL}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - DEBUG=1
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
    volumes:
      - .:/code
    ports:
      - 8000:8000
    depends_on:
      - db
      - rabbitmq
    networks:
      - backend

  worker:
    build: .
    command: celery -A bookstore_project worker --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - web
    networks:
      - backend

  db:
    image: 'postgres:12-alpine'
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - backend

  rabbitmq:
    image: 'rabbitmq:3-management'
    networks:
      - backend
  
  redis:
    image: "redis:alpine"
    networks:
      - backend

  frontend:
    restart: always
    command : yarn build
    container_name: frontend
    build: 
      context: ./kalibre
      dockerfile: Dockerfile
    volumes:
      - ./kalibre:/app
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true

volumes:
  postgres_data:

networks:
  backend:
